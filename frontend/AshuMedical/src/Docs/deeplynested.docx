function flattenObject(obj, prefix = '', result = {}) {
  for (const key in obj) {
    if (obj.hasOwnProperty(key)) {
      const newKey = prefix ? `${prefix}.${key}` : key;
      if (typeof obj[key] === 'object' && obj[key] !== null) {
        flattenObject(obj[key], newKey, result);
      } else {
        result[newKey] = obj[key];
      }
    }
  }
  return result;
}


const nestedObject = {
    
  a: 1,
  b: {
    c: 2,
    d: {
      e: {
          z:"&",
      }
    },
  },
  f: 4,
};

const flattenedObject = flattenObject(nestedObject);
console.log(flattenedObject);
// Expected Output: { a: 1, 'b.c': 2, 'b.d.e.z': '&', f: 4 }